@using System.Linq
@model MerchantViewModel

@{
    ViewBag.Title = "Merchant Details - " + Model.MerchantName;
    Layout = "~/Areas/Estate/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="card o-hidden border-0 shadow-lg my-5">
        <div class="card-body p-0">
            <!-- Nested Row within Card Body -->
            <div class="row">
                <div class="col-lg-12">
                    <div class="p-5">
                        <div class="text-center">
                            <h1 class="h4 text-gray-900 mb-4">Manage Merchant @Model.MerchantName</h1>
                        </div>
                        <form id="editMerchantForm" asp-action="UpdateMerchant" asp-area="Estate" asp-controller="Merchant" method="post" class="user">
                            <ul class="nav nav-tabs" id="myTab" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="merchantdetails-tab" data-toggle="tab" href="#merchantdetails" role="tab" aria-controls="merchantdetails" aria-selected="true">Merchant Details</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="address-tab" data-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="false">Address</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="operators-tab" data-toggle="tab" href="#operators" role="tab" aria-controls="operators" aria-selected="false">Operators</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="devices-tab" data-toggle="tab" href="#devices" role="tab" aria-controls="devices" aria-selected="false">Devices</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="history-tab" data-toggle="tab" href="#history" role="tab" aria-controls="history" aria-selected="false">History</a>
                                </li>
                            </ul>
                            <div class="tab-content" id="myTabContent">
                                <div class="tab-pane fade show active" id="merchantdetails" role="tabpanel" aria-labelledby="merchantdetails-tab">
                                    <br />
                                    <div class="form-group">
                                        <label asp-for="MerchantName" class="control-label">Merchant Name</label>
                                        <input asp-for="MerchantName" class="form-control form-control-user" required autofocus />
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Balance" class="control-label">Balance (KES)</label>
                                        <input asp-for="Balance" id="merchantBalanceLabel" class="form-control form-control-user" readonly />
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="AvailableBalance" class="control-label">Available Balance (KES)</label>
                                        <input asp-for="AvailableBalance" id="merchantAvailableBalanceLabel" class="form-control form-control-user" readonly />
                                    </div>
                                </div>
                                <div class="tab-pane fade show" id="address" role="tabpanel" aria-labelledby="address-tab">
                                    <br />
                                    <div class="form-group">
                                        <label asp-for="Addresses.First().AddressLine1" class="control-label">Address Line 1</label>
                                        <input asp-for="Addresses.First().AddressLine1" class="form-control form-control-user" required autofocus />
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="Addresses.First().AddressLine2" class="control-label">Address Line 2</label>
                                        <input asp-for="Addresses.First().AddressLine2" class="form-control form-control-user" autofocus />
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-6">
                                            <label asp-for="Addresses.First().Town" class="control-label">Town</label>
                                            <input asp-for="Addresses.First().Town" class="form-control form-control-user" required autofocus />
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label asp-for="Addresses.First().Region" class="control-label">Region</label>
                                            <input asp-for="Addresses.First().Region" class="form-control form-control-user" required autofocus />
                                        </div>
                                    </div>
                                    <div class="form-row">
                                        <div class="form-group col-md-6">
                                            <label asp-for="Addresses.First().PostalCode" class="control-label">Post Code</label>
                                            <input asp-for="Addresses.First().PostalCode" class="form-control form-control-user" required autofocus />
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label asp-for="Addresses.First().Country" class="control-label">Country</label>
                                            <input asp-for="Addresses.First().Country" class="form-control form-control-user" required autofocus />
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="operators" role="tabpanel" aria-labelledby="operators-tab">
                                    <table id="merchantOperatorList" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th>Operator Id</th>
                                                <th>Name</th>
                                                <th>Merchant Number</th>
                                                <th>Terminal Number</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                                <div class="tab-pane fade" id="devices" role="tabpanel" aria-labelledby="devices-tab">
                                    <table id="merchantDeviceList" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
                                        <thead>
                                        <tr>
                                            <th>Device Id</th>
                                            <th>Device Identifier</th>
                                        </tr>
                                        </thead>
                                    </table>
                                </div>
                                
                                <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
                                    Select Date Range: <input type="text" id="dates" style="width: 250px" />
                                    <table id="merchantBalanceHistoryList" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th>Event Id</th>
                                                <th>Date</th>
                                                <th>Reference</th>
                                                <th>Entry Type</th>
                                                <th>In</th>
                                                <th>Out</th>
                                                <th>Balance</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>

                            @*<button type="submit" class="btn btn-primary btn-user btn-block"><i class="fa fa-plus"></i> Update Merchant</button>*@
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    setInterval(function ()
    {
        $.ajax({
        url: "GetMerchantBalanceAsJson?merchantId=@Model.MerchantId",
        type: "GET",
        dataType: 'json'
    }).done(function (results)
    {
        var merchantBalanceLabel = document.getElementById("merchantBalanceLabel");
        merchantBalanceLabel.innerHTML = merchantBalanceLabel.innerHTML + " " + results.balance;

        var merchantAvailableBalanceLabel = document.getElementById("merchantAvailableBalanceLabel");
        merchantAvailableBalanceLabel.innerHTML = merchantAvailableBalanceLabel.innerHTML + " " + results.merchantAvailableBalance;
    })}, 30000);

    $(document).ready(function ()
    {
        initDatePicker();

        function initDatePicker() {
            var startDate = moment().subtract(29, 'days');
            var endDate = moment();
            var minDate = moment().subtract(1, 'years');
            var maxDate = moment();

            $('input[id="dates"]').daterangepicker({
                opens: 'left',
                startDate: startDate,
                endDate: endDate,
                minDate: minDate,
                maxDate: maxDate,
                locale: {
                    format: "DD/MM/YYYY"
                },
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    'Last 3 Months': [moment().subtract(3, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, function (start, end, label) {
                getMerchantBalanceHistory();
            });
        }

        function getMerchantBalanceHistory()
        {
            console.log('In getMerchantBalanceHistory');
            var url = 'GetMerchantBalanceHistoryAsJson?merchantId=@Model.MerchantId';
            var dataTable = $("#merchantBalanceHistoryList").DataTable();
            console.log('In getMerchantBalanceHistory load url ' + url);
            dataTable.ajax.url(url).load();
        }

        Date.prototype.yyyymmdd = function () {
            var yyyy = this.getFullYear();
            var mm = this.getMonth() < 9 ? "0" + (this.getMonth() + 1) : (this.getMonth() + 1); // getMonth() is zero-based
            var dd = this.getDate() < 10 ? "0" + this.getDate() : this.getDate();

            return "".concat(yyyy).concat('-').concat(mm).concat('-').concat(dd);
        };

        $.fn.dataTable.ext.errMode = 'none';

        $("#merchantOperatorList")
            .on('error.dt', function (e, settings, techNote, message) {
                console.log('An error has been occurred getting a list of merchant operators. Error reported by DataTables: ', message);
            }).DataTable({
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once,
                "paging": false,
                "ajax": {
                    "url": "GetMerchantOperatorListAsJson?merchantId=@Model.MerchantId",
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }],
                "columns": [
                    { "data": "operatorId", "name": "operatorId", "autoWidth": true },
                    { "data": "name", "name": "name", "autoWidth": true },
                    { "data": "merchantNumber", "name": "merchantNumber", "autoWidth": true },
                    { "data": "terminalNumber", "name": "terminalNumber", "autoWidth": true },
                ],
                "order": [[1, "asc"]]

            });

        function addAdditionalParameters(d) {
            // Date Filter
            var drp = $('#dates').data('daterangepicker');

            var startDate = new Date(drp.startDate);
            var endDate = new Date(drp.endDate);

            // Merchant filter
            return $.extend({}, d, {
                "startDate": startDate.yyyymmdd(),
                "endDate": endDate.yyyymmdd()
            });
        }

        $("#merchantDeviceList")
            .on('error.dt', function (e, settings, techNote, message) {
                console.log('An error has been occurred getting a list of merchant devices. Error reported by DataTables: ', message);
            }).DataTable({
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": false, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once,
                "paging": false,
                "ajax": {
                    "url": "GetMerchantDeviceListAsJson?merchantId=@Model.MerchantId",
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs":
                [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }],
                "columns": [
                    { "data": "key", "name": "key", "autoWidth": true, "defaultContent": "<i>Not set</i>" },
                    { "data": "value", "name": "value", "autoWidth": true, "defaultContent": "<i>Not set</i>" }
                ],
                "order": [[1, "asc"]]

            });

        $("#merchantBalanceHistoryList")
            .on('error.dt', function (e, settings, techNote, message) {
                console.log('An error has been occurred getting the merchant balance history. Error reported by DataTables: ', message);
            }).DataTable({
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once,
                "paging": false,
                "ajax": {
                    "url": "GetMerchantBalanceHistoryAsJson?merchantId=@Model.MerchantId",
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) { return addAdditionalParameters(d); }
                },
                "columnDefs":
                [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }],
                "columns": [
                    { "data": "eventId", "name": "eventId", "autoWidth": true },
                    {
                        "data": "entryDateTime", "name": "entryDateTime", "autoWidth": true,
                        render: function (d) { return moment(d).format("DD-MM-YYYY HH:mm:ss"); }
                    },
                    { "data": "reference", "name": "reference", "autoWidth": true },
                    { "data": "entryType", "name": "entryType", "autoWidth": true },
                    {
                        "data": "in", "name": "in", "autoWidth": true, "defaultContent": "",
                        render: $.fn.dataTable.render.number(',', '.', 4)
                    },
                    {
                        "data": "out", "name": "out", "autoWidth": true, "defaultContent": "",
                        render: $.fn.dataTable.render.number(',', '.', 4)
                    },
                    {
                        "data": "balance", "name": "balance", "autoWidth": true,
                        render: $.fn.dataTable.render.number(',', '.', 4)
                    }
                ],
                "order": [[1, "desc"]]

            });
    });
</script>