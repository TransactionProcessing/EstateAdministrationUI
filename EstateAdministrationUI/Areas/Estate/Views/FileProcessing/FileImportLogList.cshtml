@{
    ViewBag.Title = "File Import Log Enquiry";
    Layout = "~/Areas/Estate/Views/Shared/_Layout.cshtml";
}

    @model List<FileImportLogViewModel>

    <div class="container-fluid">
        <div class="card o-hidden border-0 shadow-lg my-3">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row" align="center">
                    <div class="col-lg-12">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">My File Import Logs</h1>
                                
                                <h5>
                                    Select Date Range: <input type="text" id="dates" style="width: 250px" />
                                    Merchant: <select id="merchantList" onchange="getFileImportLogs()">
                                        <option value="-1">- Select Merchant -</option>
                                    </select>
                                </h5>
                            </div>
                            <table id="fileImportLogList" class="table table-striped table-bordered nowrap align-content-center" width="50%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>File Import Log Id</th>
                                        <th>Date</th>
                                        <th>Number of Files</th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>

        var oTable;
        $(document).ready(function ()
        {
            getMerchantList();

            initDatePicker();

            $.fn.dataTable.ext.errMode = 'none';

            $("#fileImportLogList")
                .on('error.dt', function (e, settings, techNote, message) {
                    var html = getAlertHtml('danger', 'File Import Logs', message);
                    $("#alert").html(html);
                })
                .DataTable({
                    "processing": true, // for show progress bar
                    "serverSide": true, // for process server side
                    "filter": false, // this is for disable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                    "ajax": {
                        "url": "GetFileImportLogListAsJson",
                        "type": "POST",
                        "datatype": "json",
                        "data": function (d) { return addAdditionalParameters(d); }
                    },
                    "columnDefs":
                        [{
                            "targets": [0],
                            "visible": false,
                            "searchable": false
                        }],
                    "columns": [
                        { "data": "fileImportLogId", "name": "fileImportLogId", "autoWidth": true },
                        { "data": "importLogDateTime", "name": "importLogDateTime", "width": "60%", render: function (d) { return moment(d).format("DD-MM-YYYY");} },
                        { "data": "fileCount", "name": "fileCount", "width": "30%" },
                        {
                            "render": function (data, type, full, meta) {
                                return '<a class="btn btn-info" id="viewileImportLog" href="GetFileImportLog?fileImportLogId=' + full.fileImportLogId + '"><i class="fa fa-eye"></i></a>';
                            }
                        }
                    ],
                    "order": [[1, "desc"]]
                });
            
            getFileImportLogs();
        });

        function getMerchantList()
        {
            var options = $("#merchantList");
            $.getJSON("GetMerchantListAsJson", function(response) {
                $.each(response, function (index,merchant)
                {
                    options.append($("<option />").val(merchant.merchantId).text(merchant.merchantName));
                });
            });
        }

        function addAdditionalParameters(d)
        {
            // Date Filter
            var drp = $('#dates').data('daterangepicker');
            
            var startDate = new Date(drp.startDate);
            var endDate = new Date(drp.endDate);

            // Merchant filter
            var merchantFilter = document.getElementById('merchantList');
            return $.extend({}, d, {
                "startDate": startDate.yyyymmdd(),
                "endDate": endDate.yyyymmdd(),
                "merchantId": merchantFilter.value
            });
        }

        function initDatePicker()
        {
            var startDate = moment().subtract(29, 'days');
            var endDate = moment();
            var minDate = moment().subtract(1, 'years');
            var maxDate = moment();

            $('input[id="dates"]').daterangepicker({
                opens: 'left',
                startDate: startDate,
                endDate: endDate,
                minDate: minDate,
                maxDate: maxDate,
                locale: {
                    format: "DD/MM/YYYY"
                },
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
                    'Last 3 Months': [moment().subtract(3, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, function (start, end, label) {
                getFileImportLogs();
            });
        }

        function getFileImportLogs()
        {
            var dataTable = $("#fileImportLogList").DataTable();
            dataTable.ajax.url('GetFileImportLogListAsJson').load();
        }
        Date.prototype.yyyymmdd = function () {
            var yyyy = this.getFullYear();
            var mm = this.getMonth() < 9 ? "0" + (this.getMonth() + 1) : (this.getMonth() + 1); // getMonth() is zero-based
            var dd = this.getDate() < 10 ? "0" + this.getDate() : this.getDate();

            return "".concat(yyyy).concat('-').concat(mm).concat('-').concat(dd);
        };
    </script>
