name: Release

on:
  release:
    types: [published]

jobs:
  build:
    name: "Release"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '14.x'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1.4.4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: |
        dotnet build EstateAdministrationUI.sln --configuration ReleaseNoNode
        
    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj"
        dotnet test "EstateAdministrationUI.BusinessLogic.Tests\EstateAdministrationUI.BusinessLogic.Tests.csproj"

    - name: Run Javascript Unit Tests
      run: |
        dir
        cd EstateAdministrationUI.Javascript.Tests
        npm install
        npm run test

    - name: Publish Images to Docker Hub - Pre Release
      if: ${{ github.event.release.prerelease == true }} 
      run: |
        docker build . --file EstateAdministrationUI/Dockerfile --tag stuartferguson/estateadministrationui:dev
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/estateadministrationui:dev

    - name: Publish Images to Docker Hub - Formal Release
      if: ${{ github.event.release.prerelease == false }} 
      run: |
        docker build . --file EstateAdministrationUI/Dockerfile --tag stuartferguson/estateadministrationui:latest
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        docker push stuartferguson/estateadministrationui:latest
    
    - name: Publish Web Application
      if: ${{ github.event.release.prerelease == false }}
      run: dotnet publish "EstateAdministrationUI\EstateAdministrationUI.csproj" --configuration Release --output publishOutput -r win-x64 --self-contained

    - name: Install Octopus CLI
      if: ${{ github.event.release.prerelease == false }}
      run: |
        sudo apt update && sudo apt install --no-install-recommends gnupg curl ca-certificates apt-transport-https && \
        curl -sSfL https://apt.octopus.com/public.key | sudo apt-key add - && \
        sudo sh -c "echo deb https://apt.octopus.com/ stable main > /etc/apt/sources.list.d/octopus.com.list" && \
        sudo apt update && sudo apt install octopuscli
        
    - name: Pack Files for Octopus
      if: ${{ github.event.release.prerelease == false }}
      run: >-
        octo pack
        --outFolder /home/runner/work/EstateAdministrationUI/EstateAdministrationUI
        --basePath /home/runner/work/EstateAdministrationUI/EstateAdministrationUI/publishOutput
        --id EstateAdministrationUI
        --version ${{ steps.get_version.outputs.VERSION }}
        --format zip
        --verbose
        --logLevel=verbose
    
    - name: Push Package to Octopus
      if: ${{ github.event.release.prerelease == false }}
      run: >-
        octo push
        --server https://stuartferguson.octopus.app
        --apiKey ${{ secrets.OCTOPUS_APIKEY }}
        --package /home/runner/work/EstateAdministrationUI/EstateAdministrationUI/EstateAdministrationUI.${{ steps.get_version.outputs.VERSION }}.zip
        --overwrite-mode IgnoreIfExists
    
    - name: Get Release
      if: ${{ github.event.release.prerelease == false }}
      id: getrelease
      uses: octokit/request-action@v2.0.17
      with:
          route: GET /repos/StuartFerguson/EstateAdministrationUI/releases/tags/${{ steps.get_version.outputs.VERSION }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Release Notes
      if: ${{ github.event.release.prerelease == false }}
      id: buildreleasenotes
      uses: gr2m/get-json-paths-action@v1.0.4
      with:
          json: ${{ steps.getrelease.outputs.data }}
          releasenote: "body"
    
    - name: Create & Deploy Release in Octopus
      if: ${{ github.event.release.prerelease == false }}
      run: >-
        octo create-release
        --server https://stuartferguson.octopus.app
        --apiKey ${{ secrets.OCTOPUS_APIKEY }}
        --project "Estate Administration UI"
        --version ${{ steps.get_version.outputs.VERSION }}
        --channel Default
        --deployTo Staging
        --waitfordeployment
        --deploymenttimeout 00:05:00
        --releasenotes "${{ steps.buildreleasenotes.outputs.releasenote }}"   
