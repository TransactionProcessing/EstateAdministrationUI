name: Build and Test Pull Requests

on:
  pull_request:
    branches:
    - master

jobs:
  unittests:
    name: "Build and Unit Test"

    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '14.x'                # set this to the node version to use

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4
  
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1.4.4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: |
        dotnet build EstateAdministrationUI.sln --configuration ReleaseNoNode

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj"
        dotnet test "EstateAdministrationUI.BusinessLogic.Tests\EstateAdministrationUI.BusinessLogic.Tests.csproj"
    
    - name: Run Javascript Unit Tests
      run: |
        cd EstateAdministrationUI.Javascript.Tests
        npm install
        npm run test

  firefoxtests:
    name: "Build and Test UI - FireFox"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Certificate
      run: |
        $certPath = "$env:GITHUB_WORKSPACE\Certificates\aspnetapp-root-cert.pfx"        
        Import-PfxCertificate -FilePath $certpath -Password (ConvertTo-SecureString -String 'password' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root

    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/DockerfileWindows --tag estateadministrationui:latest
                
    - name: Run Integration Tests (Firefox)
      env:
        Browser: Firefox
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest

    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: firefoxtracelogs
        path: C:\\Users\\runneradmin\\txnproc\\trace\\

  chrometests:
    name: "Build and Test UI - Chrome"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '14.x'                # set this to the node version to use

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Certificate
      run: |
        $certPath = "$env:GITHUB_WORKSPACE\Certificates\aspnetapp-root-cert.pfx"        
        Import-PfxCertificate -FilePath $certpath -Password (ConvertTo-SecureString -String 'password' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root
            
    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/DockerfileWindows --tag estateadministrationui:latest

    - name: Run Integration Tests (Chrome)
      env:
        Browser: Chrome
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest
      
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: chrometracelogs
        path: C:\\Users\\runneradmin\\txnproc\\trace\\

  edgetests:
    name: "Build and Test UI - Edge"

    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Certificate
      run: |
        $certPath = "$env:GITHUB_WORKSPACE\Certificates\aspnetapp-root-cert.pfx"        
        Import-PfxCertificate -FilePath $certpath -Password (ConvertTo-SecureString -String 'password' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root          

    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/DockerfileWindows --tag estateadministrationui:latest

    - name: Run Integration Tests (Edge)
      env:
        Browser: Edge
        DriverPath: C:\\SeleniumWebDrivers\\EdgeDriver\\
        DriverExe: msedgedriver.exe
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest

    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: edgetracelogs
        path: C:\\Users\\runneradmin\\txnproc\\trace\\
