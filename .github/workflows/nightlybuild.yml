name: Nightly Build

on:
  schedule:
  - cron: "45 22 * * *"
  repository_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      commitcount: ${{ steps.commitswithintime.outputs.number-of-commits-within-time }}
    steps:
      - uses: actions/checkout@v2
        #with:
          #fetch-depth: 0

      - name: Check for commits within time 
        #uses: AlexHolderDeveloper/CommitsWithinTime@v1.1.5
        uses: TransactionProcessing/CommitsWithinTime@1.0.0
        id: commitswithintime
        with:
          hours: 24
          
      - name: Get the output from CommitsWithinTime
        run: |
          echo "The 'has-new-commits-within-time' value is ${{ steps.commitswithintime.outputs.has-new-commits-within-time }}"
          echo "The 'number-of-commits-within-time' value is ${{ steps.commitswithintime.outputs.number-of-commits-within-time }}"
          echo "The 'total-commits' value is ${{ steps.commitswithintime.outputs.total-commits }}"   

  firefoxbuild:
    name: "Nightly Build - Firefox"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '12.x'                # set this to the node version to use

    runs-on: windows-2019

    needs: check
    if: ${{ needs.check.outputs.commitcount > 0 }}

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Set Up Variables
      run: echo "action_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

    - name: Trust Certificate
      run: |
        $certPath = "$env:GITHUB_WORKSPACE\Certificates\aspnetapp-root-cert.pfx"        
        Import-PfxCertificate -FilePath $certpath -Password (ConvertTo-SecureString -String 'password' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1.4.4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.101'
        
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: |
        dotnet build EstateAdministrationUI.sln --configuration ReleaseNoNode
        msbuild.exe EstateAdministrationUI.Javascript.Tests\EstateAdministrationUI.Javascript.Tests.njsproj

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov1.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"
        dotnet test "EstateAdministrationUI.BusinessLogic.Tests\EstateAdministrationUI.BusinessLogic.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov2.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"     
    
    - name: Run Javascript Unit Tests
      run: |
        cd EstateAdministrationUI.Javascript.Tests
        npm install
        npm run test

    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/DockerfileWindows --tag estateadministrationui:latest
                
    - name: Run Integration Tests (Firefox)
      env:
        Browser: Firefox
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest

    - name: Create Issue on Failed workflow
      if: ${{ failure() }}
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: Investigate Nightly Build Failure - Firefox
        body: Url is ${{env.action_url}}
        labels: nightlybuild

  chromebuild:
    name: "Nightly Build - Chrome"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '12.x'                # set this to the node version to use

    runs-on: windows-2019
    
    needs: check
    if: ${{ needs.check.outputs.commitcount > 0 }}
    
    steps:
    - uses: actions/checkout@v2.3.4

    - name: Set Up Variables
      run: echo "action_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

    - name: Trust Certificate
      run: |
        $certPath = "$env:GITHUB_WORKSPACE\Certificates\aspnetapp-root-cert.pfx"        
        Import-PfxCertificate -FilePath $certpath -Password (ConvertTo-SecureString -String 'password' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1.4.4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.101'
        
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: |
        dotnet build EstateAdministrationUI.sln --configuration ReleaseNoNode
        msbuild.exe EstateAdministrationUI.Javascript.Tests\EstateAdministrationUI.Javascript.Tests.njsproj

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov1.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"
        dotnet test "EstateAdministrationUI.BusinessLogic.Tests\EstateAdministrationUI.BusinessLogic.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov2.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"     
    
    - name: Run Javascript Unit Tests
      run: |
        cd EstateAdministrationUI.Javascript.Tests
        npm install
        npm run test

    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/DockerfileWindows --tag estateadministrationui:latest
                
    - name: Run Integration Tests (Chrome)
      env:
        Browser: Chrome
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest

    - name: Create Issue on Failed workflow
      if: ${{ failure() }}
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: Investigate Nightly Build Failure - Chrome
        body: Url is ${{env.action_url}}
        labels: nightlybuild

  edgebuild:
    name: "Nightly Build - Edge"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"
        NODE_VERSION: '12.x'                # set this to the node version to use

    runs-on: windows-2019
        
    needs: check
    if: ${{ needs.check.outputs.commitcount > 0 }}

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Set Up Variables
      run: echo "action_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV

    - name: Trust Certificate
      run: |
        $certPath = "$env:GITHUB_WORKSPACE\Certificates\aspnetapp-root-cert.pfx"        
        Import-PfxCertificate -FilePath $certpath -Password (ConvertTo-SecureString -String 'password' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root

    - name: Install NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.101'

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1.4.4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: |
        dotnet build EstateAdministrationUI.sln --configuration ReleaseNoNode
        msbuild.exe EstateAdministrationUI.Javascript.Tests\EstateAdministrationUI.Javascript.Tests.njsproj

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov1.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"
        dotnet test "EstateAdministrationUI.BusinessLogic.Tests\EstateAdministrationUI.BusinessLogic.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov2.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"     
    
    - name: Run Javascript Unit Tests
      run: |
        cd EstateAdministrationUI.Javascript.Tests
        npm install
        npm run test

    - name: Build Docker Image
      run: docker build . --file EstateAdministrationUI/DockerfileWindows --tag estateadministrationui:latest

    - name: Run Integration Tests (Edge)
      env:
        Browser: Edge
        DriverPath: C:\\SeleniumWebDrivers\\EdgeDriver\\
        DriverExe: msedgedriver.exe
      run: dotnet test "EstateAdministrationUI.IntegrationTests\EstateAdministrationUI.IntegrationTests.csproj" --filter Category=PRTest

    - name: Create Issue on Failed workflow
      if: ${{ failure() }}
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: Investigate Nightly Build Failure - Edge
        body: Url is ${{env.action_url}}
        labels: nightlybuild

  codecoverage:
    name: "Nightly Build - Code Coverage"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest
    
    needs: check
    if: ${{ needs.check.outputs.commitcount > 0 }}

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Install NET 7
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.101'

    - name: Restore Nuget Packages
      run: dotnet restore EstateAdministrationUI.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build EstateAdministrationUI.sln --configuration ReleaseNoNode

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateAdministrationUI.Tests\EstateAdministrationUI.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov1.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"
        dotnet test "EstateAdministrationUI.BusinessLogic.Tests\EstateAdministrationUI.BusinessLogic.Tests.csproj" /p:CollectCoverage=true /p:Exclude="[xunit*]*" /p:ExcludeByAttribute="Obsolete" /p:ExcludeByAttribute="GeneratedCodeAttribute" /p:ExcludeByAttribute="CompilerGeneratedAttribute" /p:ExcludeByAttribute="ExcludeFromCodeCoverageAttribute" /p:CoverletOutput="../lcov2.info" /maxcpucount:1 /p:CoverletOutputFormat="lcov"
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3  
      with:
        files: ./lcov1.info,./lcov2.info
